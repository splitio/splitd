inputSet:
  name: splitd
  tags: {}
  identifier: splitd
  orgIdentifier: PROD
  projectIdentifier: Harness_Split
  pipeline:
    identifier: deploy_qos_v3
    stages:
      - stage:
          identifier: code_artifact
          type: Deployment
          spec:
            service:
              serviceRef: <+<+expression.isResolved(<+trigger.payload.repository.name>)>?<+trigger.payload.repository.name.replace("-", "")>:<+trigger.payload.artifacts[0].service.replace("-", "")>>
      - parallel:
          - stage:
              identifier: CI
              type: CI
              spec:
                execution:
                  steps:
                    - step:
                        identifier: custom_tag
                        type: Run
                        spec:
                          command: VERSION="$(cat splitio/version.go | grep 'Version =' | awk '{print $4}' | tr -d '"')"
                        when:
                          condition: "true"
                    - step:
                        identifier: BuildAndPush
                        type: BuildAndPushDockerRegistry
                        spec:
                          repo: splitd/sidecar<+<+matrix.fips_mode>=="enabled"?"-fips":"">
                          tags:
                            - <+pipeline.stages.CI<+strategy.identifierPostFix>.spec.execution.steps.custom_tag.output.outputVariables.VERSION>
                            - latest
                          dockerfile: infra/sidecar.Dockerfile
                          context: ""
                          buildArgs:
                            FIPS_MODE: <+matrix.fips_mode>
                          envVariables: <+input>
              strategy:
                matrix:
                  fips_mode:
                    - enabled
                    - disabled
          - stage:
              identifier: ECR
              type: CI
              spec:
                execution:
                  steps:
                    - step:
                        identifier: custom_tag
                        type: Run
                        spec:
                          command: VERSION="$(cat splitio/version.go | grep 'Version =' | awk '{print $4}' | tr -d '"')"
                        when:
                          condition: "true"
                    - step:
                        identifier: BuildAndPushECR
                        type: BuildAndPushECR
                        spec:
                          imageName: splitd/sidecar<+<+matrix.fips_mode>=="enabled"?"-fips":"">
                          tags:
                            - <+pipeline.stages.ECR<+strategy.identifierPostFix>.spec.execution.steps.custom_tag.output.outputVariables.VERSION>
                            - latest
                          dockerfile: infra/sidecar.Dockerfile
                          context: ""
                          buildArgs:
                            FIPS_MODE: <+matrix.fips_mode>
                          envVariables: <+input>
              strategy:
                matrix:
                  fips_mode:
                    - enabled
                    - disabled
      - stage:
          identifier: deploy
          type: Deployment
          spec:
            services:
              values: <+input>
              metadata:
                parallel: <+input>
    properties:
      ci:
        codebase:
          build:
            type: branch
            spec:
              branch: <+trigger.branch>
